// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: poolpair.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DEX int32

const (
	DEX_UNISWAP_V2 DEX = 0
	DEX_UNISWAP_V3 DEX = 1
	DEX_SUSHISWAP  DEX = 2
)

// Enum value maps for DEX.
var (
	DEX_name = map[int32]string{
		0: "UNISWAP_V2",
		1: "UNISWAP_V3",
		2: "SUSHISWAP",
	}
	DEX_value = map[string]int32{
		"UNISWAP_V2": 0,
		"UNISWAP_V3": 1,
		"SUSHISWAP":  2,
	}
)

func (x DEX) Enum() *DEX {
	p := new(DEX)
	*p = x
	return p
}

func (x DEX) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DEX) Descriptor() protoreflect.EnumDescriptor {
	return file_poolpair_proto_enumTypes[0].Descriptor()
}

func (DEX) Type() protoreflect.EnumType {
	return &file_poolpair_proto_enumTypes[0]
}

func (x DEX) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DEX.Descriptor instead.
func (DEX) EnumDescriptor() ([]byte, []int) {
	return file_poolpair_proto_rawDescGZIP(), []int{0}
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol     string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DerivedEth string `protobuf:"bytes,3,opt,name=derived_eth,json=derivedEth,proto3" json:"derived_eth,omitempty"`
	Decimals   string `protobuf:"bytes,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poolpair_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_poolpair_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_poolpair_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Token) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Token) GetDerivedEth() string {
	if x != nil {
		return x.DerivedEth
	}
	return ""
}

func (x *Token) GetDecimals() string {
	if x != nil {
		return x.Decimals
	}
	return ""
}

type PoolPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DexId               DEX     `protobuf:"varint,1,opt,name=dex_id,json=dexId,proto3,enum=models.DEX" json:"dex_id,omitempty"`
	Id                  string  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Token0              *Token  `protobuf:"bytes,3,opt,name=token0,proto3" json:"token0,omitempty"`
	Token1              *Token  `protobuf:"bytes,4,opt,name=token1,proto3" json:"token1,omitempty"`
	Liquidity           string  `protobuf:"bytes,5,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	SqrtPrice           string  `protobuf:"bytes,6,opt,name=sqrt_price,json=sqrtPrice,proto3" json:"sqrt_price,omitempty"`
	TotalValueLockedUsd string  `protobuf:"bytes,7,opt,name=total_value_locked_usd,json=totalValueLockedUsd,proto3" json:"total_value_locked_usd,omitempty"`
	Reserve0            float64 `protobuf:"fixed64,8,opt,name=reserve0,proto3" json:"reserve0,omitempty"`
	Reserve1            float64 `protobuf:"fixed64,9,opt,name=reserve1,proto3" json:"reserve1,omitempty"`
	Reserve0Usd         float64 `protobuf:"fixed64,10,opt,name=reserve0_usd,json=reserve0Usd,proto3" json:"reserve0_usd,omitempty"`
	Reserve1Usd         float64 `protobuf:"fixed64,11,opt,name=reserve1_usd,json=reserve1Usd,proto3" json:"reserve1_usd,omitempty"`
	TradeAmount0        float64 `protobuf:"fixed64,12,opt,name=trade_amount0,json=tradeAmount0,proto3" json:"trade_amount0,omitempty"`
	TradeAmount1        float64 `protobuf:"fixed64,13,opt,name=trade_amount1,json=tradeAmount1,proto3" json:"trade_amount1,omitempty"`
	FeeTier             string  `protobuf:"bytes,14,opt,name=fee_tier,json=feeTier,proto3" json:"fee_tier,omitempty"`
	EffectivePrice0     string  `protobuf:"bytes,15,opt,name=effective_price0,json=effectivePrice0,proto3" json:"effective_price0,omitempty"` // big.Float can't be directly represented in protobuf. You might want to convert it to string or a suitable numerical type
	EffectivePrice1     string  `protobuf:"bytes,16,opt,name=effective_price1,json=effectivePrice1,proto3" json:"effective_price1,omitempty"` // big.Float can't be directly represented in protobuf. You might want to convert it to string or a suitable numerical type
}

func (x *PoolPair) Reset() {
	*x = PoolPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poolpair_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolPair) ProtoMessage() {}

func (x *PoolPair) ProtoReflect() protoreflect.Message {
	mi := &file_poolpair_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolPair.ProtoReflect.Descriptor instead.
func (*PoolPair) Descriptor() ([]byte, []int) {
	return file_poolpair_proto_rawDescGZIP(), []int{1}
}

func (x *PoolPair) GetDexId() DEX {
	if x != nil {
		return x.DexId
	}
	return DEX_UNISWAP_V2
}

func (x *PoolPair) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PoolPair) GetToken0() *Token {
	if x != nil {
		return x.Token0
	}
	return nil
}

func (x *PoolPair) GetToken1() *Token {
	if x != nil {
		return x.Token1
	}
	return nil
}

func (x *PoolPair) GetLiquidity() string {
	if x != nil {
		return x.Liquidity
	}
	return ""
}

func (x *PoolPair) GetSqrtPrice() string {
	if x != nil {
		return x.SqrtPrice
	}
	return ""
}

func (x *PoolPair) GetTotalValueLockedUsd() string {
	if x != nil {
		return x.TotalValueLockedUsd
	}
	return ""
}

func (x *PoolPair) GetReserve0() float64 {
	if x != nil {
		return x.Reserve0
	}
	return 0
}

func (x *PoolPair) GetReserve1() float64 {
	if x != nil {
		return x.Reserve1
	}
	return 0
}

func (x *PoolPair) GetReserve0Usd() float64 {
	if x != nil {
		return x.Reserve0Usd
	}
	return 0
}

func (x *PoolPair) GetReserve1Usd() float64 {
	if x != nil {
		return x.Reserve1Usd
	}
	return 0
}

func (x *PoolPair) GetTradeAmount0() float64 {
	if x != nil {
		return x.TradeAmount0
	}
	return 0
}

func (x *PoolPair) GetTradeAmount1() float64 {
	if x != nil {
		return x.TradeAmount1
	}
	return 0
}

func (x *PoolPair) GetFeeTier() string {
	if x != nil {
		return x.FeeTier
	}
	return ""
}

func (x *PoolPair) GetEffectivePrice0() string {
	if x != nil {
		return x.EffectivePrice0
	}
	return ""
}

func (x *PoolPair) GetEffectivePrice1() string {
	if x != nil {
		return x.EffectivePrice1
	}
	return ""
}

type PoolPairList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolPairs []*PoolPair `protobuf:"bytes,1,rep,name=pool_pairs,json=poolPairs,proto3" json:"pool_pairs,omitempty"`
}

func (x *PoolPairList) Reset() {
	*x = PoolPairList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poolpair_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolPairList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolPairList) ProtoMessage() {}

func (x *PoolPairList) ProtoReflect() protoreflect.Message {
	mi := &file_poolpair_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolPairList.ProtoReflect.Descriptor instead.
func (*PoolPairList) Descriptor() ([]byte, []int) {
	return file_poolpair_proto_rawDescGZIP(), []int{2}
}

func (x *PoolPairList) GetPoolPairs() []*PoolPair {
	if x != nil {
		return x.PoolPairs
	}
	return nil
}

var File_poolpair_proto protoreflect.FileDescriptor

var file_poolpair_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6f, 0x6f, 0x6c, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x6c, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x72,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x65, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x45, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0xb7, 0x04, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x06, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x44, 0x45, 0x58,
	0x52, 0x05, 0x64, 0x65, 0x78, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x12, 0x25,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x71, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x71, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x30, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x31, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x31, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x30, 0x5f, 0x75, 0x73, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x30, 0x55,
	0x73, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x31, 0x5f, 0x75,
	0x73, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x31, 0x55, 0x73, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x30, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x30, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x65, 0x65, 0x54, 0x69, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x30, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x30, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x31, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x31,
	0x22, 0x3f, 0x0a, 0x0c, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x69, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x6f,
	0x6f, 0x6c, 0x50, 0x61, 0x69, 0x72, 0x52, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x69, 0x72,
	0x73, 0x2a, 0x34, 0x0a, 0x03, 0x44, 0x45, 0x58, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x49, 0x53,
	0x57, 0x41, 0x50, 0x5f, 0x56, 0x32, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x49, 0x53,
	0x57, 0x41, 0x50, 0x5f, 0x56, 0x33, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x53, 0x48,
	0x49, 0x53, 0x57, 0x41, 0x50, 0x10, 0x02, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x68, 0x61, 0x73, 0x68, 0x6b, 0x65, 0x76, 0x79, 0x63,
	0x68, 0x2f, 0x74, 0x72, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_poolpair_proto_rawDescOnce sync.Once
	file_poolpair_proto_rawDescData = file_poolpair_proto_rawDesc
)

func file_poolpair_proto_rawDescGZIP() []byte {
	file_poolpair_proto_rawDescOnce.Do(func() {
		file_poolpair_proto_rawDescData = protoimpl.X.CompressGZIP(file_poolpair_proto_rawDescData)
	})
	return file_poolpair_proto_rawDescData
}

var file_poolpair_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_poolpair_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_poolpair_proto_goTypes = []interface{}{
	(DEX)(0),             // 0: models.DEX
	(*Token)(nil),        // 1: models.Token
	(*PoolPair)(nil),     // 2: models.PoolPair
	(*PoolPairList)(nil), // 3: models.PoolPairList
}
var file_poolpair_proto_depIdxs = []int32{
	0, // 0: models.PoolPair.dex_id:type_name -> models.DEX
	1, // 1: models.PoolPair.token0:type_name -> models.Token
	1, // 2: models.PoolPair.token1:type_name -> models.Token
	2, // 3: models.PoolPairList.pool_pairs:type_name -> models.PoolPair
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_poolpair_proto_init() }
func file_poolpair_proto_init() {
	if File_poolpair_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_poolpair_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poolpair_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poolpair_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolPairList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_poolpair_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_poolpair_proto_goTypes,
		DependencyIndexes: file_poolpair_proto_depIdxs,
		EnumInfos:         file_poolpair_proto_enumTypes,
		MessageInfos:      file_poolpair_proto_msgTypes,
	}.Build()
	File_poolpair_proto = out.File
	file_poolpair_proto_rawDesc = nil
	file_poolpair_proto_goTypes = nil
	file_poolpair_proto_depIdxs = nil
}
